* original data
  
#+BEGIN_SRC csv
back,front
från,von
dig,euch
har,habe
grönsaker,Gemüse
förklara,erklären
ficka,Tashen
#+END_SRC

* requests

  Get the source code
#+NAME: fetch
#+BEGIN_SRC restclient :var path="" :exports none
GET http://sv.bab.la/:path
#+END_SRC

Parsa alla länkar som går direkt till en sida med fraser. Dessa har då 4st "/" i namnet. Mitten-delen av pathen är namnet på sektionen.
#+BEGIN_SRC emacs-lisp :session=links :var src=fetch(path="fraser")
(require 'cl)
(require 'xml)
(require 'dom)

(defun get-url (url)
  (with-current-buffer 
      (url-retrieve-synchronously url) 
    (decode-coding-string (buffer-string) 'utf-8)))

(defun parse (src)
  (with-temp-buffer
    (insert src)
    (libxml-parse-html-region (point-min) (point-max))))


(defun parse-links (dom) 
  (rm-dups (mapcar #'clean-link (remove-if-not #'stringp 
                                               (mapcar 
                                                (lambda (tag) 
                                                  (dom-attr tag 'href)) 
                                                (dom-by-tag dom 'a))))))

(defun clean-link (link)
  "Removes # and everything after it in strings"
  (substring link 0 (string-match "#" link)))

(defun rm-dups (links)
  (cl-remove-duplicates links :test #'string-equal))

(defun fraser-p (l) 
  (string-match "fraser" l))

(defun direct-link-p (l)
  (= 5 (length (split-string l "/"))))

(defun add-correct-lang-per-link (link)
  (concat link "svensk-tysk"))

(defun direct-links (src)
  (mapcar #'add-correct-lang-per-link 
          (remove-duplicates (remove-if-not #'direct-link-p 
                                            (remove-if-not #'fraser-p 
                                                           (parse-links 
                                                            (parse src))))
                             :test #'string-equal)))

(defvar links-to-phrases '())
(setq links-to-phrases (direct-links src))

#+END_SRC

#+RESULTS:
| /fraser/ansokan/personligt-brev/svensk-tysk | /fraser/ansokan/cv/svensk-tysk | /fraser/ansokan/referensbrev/svensk-tysk | /fraser/akademiker/innehallsforteckning/svensk-tysk | /fraser/akademiker/inledning/svensk-tysk | /fraser/akademiker/huvuddel/svensk-tysk | /fraser/akademiker/statistik/svensk-tysk | /fraser/akademiker/grafer-bilder-diagram/svensk-tysk | /fraser/akademiker/avslutning/svensk-tysk | /fraser/akademiker/citation/svensk-tysk | /fraser/akademiker/forkortningar/svensk-tysk | /fraser/affarer/brev/svensk-tysk | /fraser/affarer/e-post/svensk-tysk | /fraser/affarer/faktura/svensk-tysk | /fraser/affarer/bestallning/svensk-tysk | /fraser/affarer/moten/svensk-tysk | /fraser/affarer/reservationer/svensk-tysk | /fraser/affarer/forkortningar/svensk-tysk | /fraser/affarer/yrkesbeteckningar/svensk-tysk | /fraser/personligt/brev/svensk-tysk | /fraser/personligt/e-post/svensk-tysk | /fraser/personligt/meddelanden-inbjudningar/svensk-tysk | /fraser/personligt/lyckonskningar/svensk-tysk | /fraser/personligt/sms-webb/svensk-tysk | /fraser/resa/generellt/svensk-tysk | /fraser/resa/dator/svensk-tysk | /fraser/resa/halsa/svensk-tysk | /fraser/resa/shopping/svensk-tysk | /fraser/resa/ata-ute/svensk-tysk | /fraser/resa/logi/svensk-tysk | /fraser/resa/siffror-pengar/svensk-tysk | /fraser/resa/datum-tid/svensk-tysk | /fraser/resa/ta-sig-runt/svensk-tysk | /fraser/resa/florta/svensk-tysk | /fraser/immigration/dokument/svensk-tysk | /fraser/immigration/bank/svensk-tysk | /fraser/immigration/arbete/svensk-tysk | /fraser/immigration/studera/svensk-tysk | /fraser/immigration/bostad/svensk-tysk | /fraser/immigration/stöd-för-funktionshindrade/svensk-tysk | /fraser/immigration/husdjur/svensk-tysk |


#+BEGIN_SRC emacs-lisp :session=links
(defun parse-phrases (src)
  (flet ((get-suggestion  (n) (dom-texts (dom-by-class n "dict-suggestion")))
         (get-result      (n) (dom-texts (dom-by-class n "dict-result")))
         (get-explanation (n) (dom-texts (dom-by-class n "dict-explanation"))))
    (mapcar (lambda (entry) 
              (list :suggestion (get-suggestion entry) 
                    :result (get-result entry) 
                    :explanation (get-explanation entry))) 
            (dom-by-class src "dict-entry"))))
#+END_SRC

#+RESULTS:
: parse-phrases


Using the org-sbe macro to call a source block within elisp.

Exempel på hur parse-phrases kan avändas.
#+BEGIN_SRC emacs-lisp :session=links
(seq-take (parse-phrases (parse (org-sbe "fetch" (path "(car links-to-phrases)")))) 2)
#+END_SRC


#+RESULTS:
| :suggestion | Bäste herrn, | :result | Sehr geehrter Herr, | :explanation | Formellt, manlig mottagare, namnet okänt   |
| :suggestion | Bästa fru,   | :result | Sehr geehrte Frau,  | :explanation | Formellt, kvinnlig mottagare, namnet okänt |


#+BEGIN_SRC emacs-lisp :session=links :results code
(parse-phrases (parse (org-sbe "fetch" (path "(nth 1 links-to-phrases)"))))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC emacs-lisp
((:suggestion "Förnamn" :result "Vorname" :explanation "Den sökandes tilltalsnamn")
 (:suggestion "Efternamn" :result "Nachname" :explanation "Den sökandes familje- eller släktnamn")
 (:suggestion "Födelsetid" :result "Geburtsdatum" :explanation "Den sökandes födelsedatum och -år")
 (:suggestion "Födelseort" :result "Geburtsort" :explanation "Namnet på stället där den sökande föddes")
 (:suggestion "Nationalitet" :result "Staatsangehörigkeit" :explanation "Land där den sökande är medborgare i")
 (:suggestion "Civilstånd" :result "Familienstand" :explanation "Den sökandes nuvarande relationsstatus")
 (:suggestion "Ogift" :result "ledig" :explanation "Inte gift (men kan ha ett förhållande)")
 (:suggestion "Gift" :result "verheiratet" :explanation "Har en man eller en hustru")
 (:suggestion "Änkling/Änka" :result "verwitwet" :explanation "Ensamstående på grund av makens/makans död")
 (:suggestion "adressen" :result "Adresse" :explanation "Uppgifter om var den sökande för tillfället bor")
 (:suggestion "Telefon" :result "Telefon" :explanation "Telefonnumret på vilket den sökande nås")
 (:suggestion "E-post" :result "Email" :explanation "Den sökandes aktuella e-postadress")
 (:suggestion "Hemsida" :result "Website" :explanation "Adressen till den sökandens personliga hemsida eller företagswebbplats")
 (:suggestion "1991 - 1995 / Seattle University / Seattle, WA    Tradenom" :result "1991 - 1995 / Universität Seattle / Seattle, WA  Bachelorstudiengang Betriebswirtschaftslehre" :explanation "Standard format för att lista din utbildning (USA)")
 (:suggestion "Grundskola" :result "Grundschule" :explanation "Den lägsta nivån av skola som ger formell undervisning för barn mellan sex och elva år (USA )")
 (:suggestion "Grundskola (mellanstadiet)" :result "Mittelstufenschule" :explanation "Skola mellan grundskolan och gymnasiet för barn mellan elva och fjorton år (USA )")
 (:suggestion "Gymnasiet" :result "Oberstufenschule" :explanation "Skola efter mellanstadiet för barn i åldrarna fjorton till arton år (USA)")
 (:suggestion "Högskola/Universitet" :result "Hochschule" :explanation "Namn för examen på högskolenivå (USA)")
 (:suggestion "Dagis" :result "Vorschule" :explanation "Svenska barnomsorgen innan skolgång")
 (:suggestion "Förskola" :result "Grundschule" :explanation "Svensk skolning för barn i åldrarna fyra till sex år")
 (:suggestion "Grundskola" :result "weiterführende Schule" :explanation "Svensk utbildning för ungdomar i åldrarna sex till femton år")
 (:suggestion "Gymnasiet" :result "Oberstufenkolleg" :explanation "Svensk utbildning för ungdomar i åldrarna sexton till nitton år")
 (:suggestion "Skola för elever i sixth form" :result "Universität" :explanation "Brittisk utbildning för ungdomar i åldrarna sexton till arton år. Har som syfte att förbättra betyg för att söka vidare.")
 (:suggestion "Universitet" :result "" :explanation "Brittisk motsvarighet till svenskt universitet/högskola")
 (:suggestion "1998- / Jackson Skor AB / Spokane, WA    Chef    Ansvarsområde:" :result "1998 - heute / Jackson Shoes Inc. / Spokane, WA  Manager  Verantwortlichkeiten:" :explanation "Ett exempel på det vanligaste sättet att lista sin yrkesbakgrund")
 (:suggestion "Arbetslivserfarenhet inom/från ..." :result "Arbeitserfahrung bei..." :explanation "Används för att ange ett jobb som du haft för att få insikt eller kunskap inom ett visst arbetsområde")
 (:suggestion "Praktikplats hos ..." :result "Praktikum bei..." :explanation "Används för att ange tillfälligt arbete som du haft för att få insikt eller kunskap inom ett visst arbetsområde. Termen används ofta för arbete som utförts utomlands under en viss period")
 (:suggestion "Volontärarbete i ..." :result "Ehrenamtliche Tätigkeit bei..." :explanation "Används för att ange oavlönat arbete, vanligtvis utfört för att hjälpa utsatta")
 (:suggestion "God förståelse i ...; både skriftligen och muntligen" :result "Gute ...-Kenntnisse in Wort und Schrift" :explanation "Används för att ange att den sökande har en realativt god kompetensnivå i ett språk")
 (:suggestion "Skriver och talar ... flytande" :result "... fließend in Wort und Schrift" :explanation "Används för att ange att den sökande talar ett visst språk flytande")
 (:suggestion "Datakunnig" :result "gute Computer-Kenntnisse" :explanation "Används för att indikera att den sökande kan använda alla grundläggande datafunktioner")
 (:suggestion "Utmärkt kommunikationsförmåga / förhandlingsteknik / presentationsteknik." :result "Hervorragende(s) kommunikative Fähigkeiten / Verhandlungsgeschick / Präsentationsfähigkeiten" :explanation "Används för att ange att den sökande är bra på att kommunicera / förhandla / presentera")
 (:suggestion "Avancerade kunskaper i Microsoft Office Suite / HTML-programmering." :result "Fortgeschrittene Kenntnisse in Microsoft Office / HTML-Programmierung" :explanation "Används för att ange att den sökande har god kunskap i användningen av alla Microsoft Office-program samt av HMTL-kod")
 (:suggestion "Erfarenhet av Microsoft Word / Excel / Access / PowerPoint." :result "Microsoft Word-, Excel-, Access-, Powerpoint-Kenntnisse" :explanation "Används för att ange att den sökande har erfarenhet av ordbehandlings-, kalkyl-, databas- och presentationsprogram")
 (:suggestion "Erfarenhet av CAD / CAM." :result "Kenntnisse in CAD / CAM" :explanation "Används för att ange att den sökande kan använda design programvara")
 (:suggestion "Jag besitter ett ...-körkort." :result "Führerschein Klasse..." :explanation "Används för att ange att den sökande lagligt har lov att köra bil"))
#+END_SRC

Nu ska vi hämta ut alla sektioner, med alla sina fraser

Måste ha egen get-url pga funkar inte o köra den via org mode.

#+BEGIN_SRC emacs-lisp :session=links :results list
(defun get-tag (link)
  (nth 2 (split-string link "/")))

(defun get-phrases (link)
  (parse-phrases (parse (get-url (concat "http://sv.bab.la" link)))))

(defun write-to-file (str)
  (write-region str nil "cards.csv" 'append))

(defun row->csv (tag phrase)
  "Formattet: sugg,result,tag\n"
  (let ((clean-sugg (replace-regexp-in-string "," ";" (plist-get phrase :suggestion)))
        (clean-result (replace-regexp-in-string "," ";" (plist-get phrase :result))))
    (concat clean-sugg
            ","
            clean-result
            ","
            tag)))

(defun make-csv-rows-of-phrases (tag phrases)
  (mapcar (lambda (x) (row->csv tag x)) phrases))

(defun append-section-to-csv-file (section)
  (let* ((tag (plist-get section :tag))
         (phrases (make-csv-rows-of-phrases tag (plist-get section :phrases)))
         (lines (concat (string-join phrases "\n") "\n")))
    (write-to-file lines)))

(defun get-section (link)
  (list :tag (get-tag link) :phrases (get-phrases link)))

(defun append-header-to-csv-file ()
  "The header is: back,front,tags"
  (write-to-file "back,front,tags\n"))

(defvar all-section-links '())
(setq all-section-links links-to-phrases)

(defun append-all-links-as-sections-to-csv-file (links)
  (if (file-exists-p "cards.csv")
      (delete-file "cards.csv"))
  (append-header-to-csv-file)
  (while links
    (progn (message "Add: %s to file" (car links))
           (append-section-to-csv-file (get-section (car links)))
           (setq links (cdr links)))))

(append-all-links-as-sections-to-csv-file all-section-links)

(get-section (car all-section-links))
(mapcar (lambda (x) x) all-section-links)

#+END_SRC

#+RESULTS:
- /fraser/ansokan/personligt-brev/svensk-tysk
- /fraser/ansokan/cv/svensk-tysk
- /fraser/ansokan/referensbrev/svensk-tysk
- /fraser/akademiker/innehallsforteckning/svensk-tysk
- /fraser/akademiker/inledning/svensk-tysk
- /fraser/akademiker/huvuddel/svensk-tysk
- /fraser/akademiker/statistik/svensk-tysk
- /fraser/akademiker/grafer-bilder-diagram/svensk-tysk
- /fraser/akademiker/avslutning/svensk-tysk
- /fraser/akademiker/citation/svensk-tysk
- /fraser/akademiker/forkortningar/svensk-tysk
- /fraser/affarer/brev/svensk-tysk
- /fraser/affarer/e-post/svensk-tysk
- /fraser/affarer/faktura/svensk-tysk
- /fraser/affarer/bestallning/svensk-tysk
- /fraser/affarer/moten/svensk-tysk
- /fraser/affarer/reservationer/svensk-tysk
- /fraser/affarer/forkortningar/svensk-tysk
- /fraser/affarer/yrkesbeteckningar/svensk-tysk
- /fraser/personligt/brev/svensk-tysk
- /fraser/personligt/e-post/svensk-tysk
- /fraser/personligt/meddelanden-inbjudningar/svensk-tysk
- /fraser/personligt/lyckonskningar/svensk-tysk
- /fraser/personligt/sms-webb/svensk-tysk
- /fraser/resa/generellt/svensk-tysk
- /fraser/resa/dator/svensk-tysk
- /fraser/resa/halsa/svensk-tysk
- /fraser/resa/shopping/svensk-tysk
- /fraser/resa/ata-ute/svensk-tysk
- /fraser/resa/logi/svensk-tysk
- /fraser/resa/siffror-pengar/svensk-tysk
- /fraser/resa/datum-tid/svensk-tysk
- /fraser/resa/ta-sig-runt/svensk-tysk
- /fraser/resa/florta/svensk-tysk
- /fraser/immigration/dokument/svensk-tysk
- /fraser/immigration/bank/svensk-tysk
- /fraser/immigration/arbete/svensk-tysk
- /fraser/immigration/studera/svensk-tysk
- /fraser/immigration/bostad/svensk-tysk
- /fraser/immigration/stöd-för-funktionshindrade/svensk-tysk
- /fraser/immigration/husdjur/svensk-tysk



* export
